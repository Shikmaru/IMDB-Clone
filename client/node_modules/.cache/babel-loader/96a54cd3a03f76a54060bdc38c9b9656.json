{"ast":null,"code":"var _jsxFileName = \"/home/pramol/Desktop/IMDB/client/src/components/AddData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport ActorData from './ActorData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddData() {\n  _s();\n  const [movieName, setMovieName] = useState();\n  const [year, setYear] = useState();\n  const [plot, setPlot] = useState();\n  const [actorList, setActorList] = useState([]);\n  const [producerList, setProducerList] = useState([]);\n  const [actor, setActor] = useState();\n  const [producer, setProducer] = useState();\n  const [actorName, setActorName] = useState();\n  const [actorGender, setActorGender] = useState();\n  const [actorDob, setActorDob] = useState();\n  const [actorBio, setActorBio] = useState();\n  const [isShown, setIsShown] = useState('');\n  const [isShown2, setIsShown2] = useState(false);\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/actor\").then(response => {\n      setActorList(response.data);\n    });\n    Axios.get(\"http://localhost:3001/producer\").then(response => {\n      setProducerList(response.data);\n    });\n  }, []);\n  const submitData = () => {\n    Axios.post(\"http://localhost:3001/movie\", {\n      movieName: movieName,\n      year: year,\n      plot: plot,\n      actor: actor,\n      producer: producer\n    }).then(console.log(\"Data inserted\"));\n  };\n  const submitActorData = () => {\n    Axios.post(\"http://localhost:3001/actor\", {\n      actorName: actorName,\n      actorGender: actorGender,\n      actorDob: actorDob,\n      actorBio: actorBio\n    }).then(console.log(\"Data inserted\"));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-4 form m-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"mo_name\",\n          className: \"form-label\",\n          children: \"Movie Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"mo_name\",\n          className: \"form-control\",\n          required: true,\n          onChange: e => setMovieName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"actList\",\n          className: \"form-label\",\n          children: \"Actor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          list: \"actdata\",\n          id: \"actList\",\n          onChange: e => setActor(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"actdata\",\n          children: actorList.map(val => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: val.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: () => {\n            setIsShown(true);\n          },\n          children: \" New Actor \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleDataList\",\n          className: \"form-label\",\n          children: \"Producer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          list: \"datalistOptions\",\n          id: \"exampleDataList\",\n          onChange: e => setProducer(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"datalistOptions\",\n          children: producerList.map(val => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: val.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: () => {\n            setIsShown2(true);\n          },\n          children: \" New Producer \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"mo_date\",\n          className: \"form-label\",\n          children: \"Year of Release\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"mo_date\",\n          className: \"form-control\",\n          required: true,\n          onChange: e => setYear(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"mo_plot\",\n          className: \"form-label\",\n          children: \"Plot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"mo_plot\",\n          className: \"form-control\",\n          required: true,\n          onChange: e => setPlot(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: () => submitData(),\n          className: \"btn btn-primary  mt-3\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-4 m-5\",\n      children: [isShown && /*#__PURE__*/_jsxDEV(ActorData, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), isShown2 && /*#__PURE__*/_jsxDEV(ActorData, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(AddData, \"mouyFvGO8XRdZtauo5DI+OnFXno=\");\n_c = AddData;\nexport default AddData;\nvar _c;\n$RefreshReg$(_c, \"AddData\");","map":{"version":3,"names":["React","useState","useEffect","Axios","ActorData","AddData","movieName","setMovieName","year","setYear","plot","setPlot","actorList","setActorList","producerList","setProducerList","actor","setActor","producer","setProducer","actorName","setActorName","actorGender","setActorGender","actorDob","setActorDob","actorBio","setActorBio","isShown","setIsShown","isShown2","setIsShown2","get","then","response","data","submitData","post","console","log","submitActorData","e","target","value","map","val","Name"],"sources":["/home/pramol/Desktop/IMDB/client/src/components/AddData.js"],"sourcesContent":["import React, { useState,useEffect } from 'react'\nimport Axios from 'axios'\nimport ActorData from './ActorData'\nfunction AddData() {\n    const [movieName, setMovieName] = useState()\n    const [year, setYear] = useState()\n    const [plot, setPlot] = useState()\n    const [actorList, setActorList]= useState([])\n    const [producerList, setProducerList]= useState([])\n    const [actor, setActor]= useState()\n    const [producer, setProducer]= useState()\n    const [actorName, setActorName]=useState()\n    const [actorGender, setActorGender]= useState()\n    const [actorDob, setActorDob]= useState()\n    const [actorBio, setActorBio]=useState()\n   \n    const[isShown, setIsShown]=useState('')\n    const[isShown2, setIsShown2]=useState(false)\n     useEffect(()=>{\n        Axios.get(\"http://localhost:3001/actor\").then((response)=>{\n            setActorList(response.data)\n        });\n        Axios.get(\"http://localhost:3001/producer\").then((response)=>{\n            setProducerList(response.data)\n        });\n     },[]);\n    const submitData = () => {\n\n        Axios.post(\"http://localhost:3001/movie\", {\n            movieName: movieName,\n            year: year,\n            plot: plot,\n            actor: actor,\n            producer: producer\n\n        }).then(\n            console.log(\"Data inserted\")\n        );\n\n\n    }\n\n    const submitActorData = () => {\n\n        Axios.post(\"http://localhost:3001/actor\", {\n            actorName: actorName,\n            actorGender: actorGender,\n            actorDob: actorDob,\n            actorBio: actorBio\n        }).then(\n            console.log(\"Data inserted\")\n        );\n\n\n    }\n   \n   return (\n    <div className='row'>\n    <div className='col-4 form m-5'>\n        <div className='form'>\n        <label htmlFor=\"mo_name\" className='form-label'>Movie Name</label>\n        <input type=\"text\" id=\"mo_name\" className='form-control' required onChange={(e) => \n        setMovieName(e.target.value)    }/>\n\n<label htmlFor=\"actList\" className=\"form-label\">Actor</label>\n        <input className=\"form-control\" list=\"actdata\" id=\"actList\"  onChange={(e) => \n        setActor(e.target.value)        }/>\n         <datalist id=\"actdata\">\n            {actorList.map((val)=>{\n             return <option value={val.Name}></option>\n            })}\n        </datalist>\n        <br/>\n        <button className='btn btn-warning' onClick={()=>{setIsShown(true)}}> New Actor </button>\n        <br/> \n        <br/>\n        <label htmlFor=\"exampleDataList\" className=\"form-label\">Producer</label>\n        <input className=\"form-control\" list=\"datalistOptions\" id=\"exampleDataList\" onChange={(e) => \n        setProducer(e.target.value)        } />\n         <datalist id=\"datalistOptions\">\n            {producerList.map((val)=>{\n             return <option value={val.Name}></option>\n            })}\n        </datalist>\n        <br/>\n        <button className='btn btn-warning' onClick={()=>{setIsShown2(true)}}> New Producer </button>\n        <br/> \n        <br/>\n        <label htmlFor=\"mo_date\" className='form-label'>Year of Release</label>\n        <input type=\"text\" id=\"mo_date\" className='form-control' required onChange={(e) => \n        setYear(e.target.value) \n        }/>\n        <label htmlFor=\"mo_plot\" className='form-label'>Plot</label>\n        <input type=\"text\" id=\"mo_plot\" className='form-control' required onChange={(e) => \n        setPlot(e.target.value) \n        }/>\n        \n        <button type=\"submit\" onClick={() => submitData() } className='btn btn-primary  mt-3'>Submit</button>\n        </div>\n    </div>\n    <div className='col-4 m-5'>\n        {isShown && <ActorData/>}\n        {isShown2 && <ActorData/>}\n    </div>\n    </div>\n   );\n\n\n\n}\nexport default AddData"],"mappings":"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"},"metadata":{},"sourceType":"module"}