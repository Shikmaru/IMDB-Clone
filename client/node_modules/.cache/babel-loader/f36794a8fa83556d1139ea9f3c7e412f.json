{"ast":null,"code":"var _jsxFileName = \"/home/pramol/Desktop/IMDB/client/src/components/AddData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport ActorData from './ActorData';\nimport ProducerData from './ProducerData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddData() {\n  _s();\n  const [movieName, setMovieName] = useState();\n  const [year, setYear] = useState();\n  const [plot, setPlot] = useState();\n  const [actorList, setActorList] = useState([]);\n  const [producerList, setProducerList] = useState([]);\n  const [actor, setActor] = useState();\n  const [producer, setProducer] = useState();\n  const [isShown, setIsShown] = useState('');\n  const [isShown2, setIsShown2] = useState(false);\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/actor\").then(response => {\n      setActorList(response.data);\n    });\n    Axios.get(\"http://localhost:3001/producer\").then(response => {\n      setProducerList(response.data);\n    });\n  }, []);\n  const submitData = () => {\n    Axios.post(\"http://localhost:3001/movie\", {\n      movieName: movieName,\n      year: year,\n      plot: plot,\n      actor: actor,\n      producer: producer\n    }).then(alert(\"Movie Added \"));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-4 form m-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"mo_name\",\n          className: \"form-label\",\n          children: \"Movie Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"mo_name\",\n          className: \"form-control\",\n          required: true,\n          onChange: e => setMovieName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"actList\",\n          className: \"form-label\",\n          children: \"Actor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          list: \"actdata\",\n          id: \"actList\",\n          onChange: e => setActor(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"actdata\",\n          children: actorList.map(val => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: val.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: () => {\n            setIsShown(true);\n          },\n          children: \" New Actor \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleDataList\",\n          className: \"form-label\",\n          children: \"Producer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          list: \"datalistOptions\",\n          id: \"exampleDataList\",\n          onChange: e => setProducer(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"datalistOptions\",\n          children: producerList.map(val => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: val.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: () => {\n            setIsShown2(true);\n          },\n          children: \" New Producer \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"mo_date\",\n          className: \"form-label\",\n          children: \"Year of Release\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"mo_date\",\n          className: \"form-control\",\n          required: true,\n          onChange: e => setYear(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"mo_plot\",\n          className: \"form-label\",\n          children: \"Plot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"mo_plot\",\n          className: \"form-control\",\n          required: true,\n          onChange: e => setPlot(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: () => submitData(),\n          className: \"btn btn-primary  mt-3\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-5 m-5\",\n      children: [isShown && /*#__PURE__*/_jsxDEV(ActorData, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), isShown2 && /*#__PURE__*/_jsxDEV(ProducerData, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(AddData, \"icXApX1Oxcme/HZpGb9beCNPtSU=\");\n_c = AddData;\nexport default AddData;\nvar _c;\n$RefreshReg$(_c, \"AddData\");","map":{"version":3,"names":["React","useState","useEffect","Axios","ActorData","ProducerData","AddData","movieName","setMovieName","year","setYear","plot","setPlot","actorList","setActorList","producerList","setProducerList","actor","setActor","producer","setProducer","isShown","setIsShown","isShown2","setIsShown2","get","then","response","data","submitData","post","alert","e","target","value","map","val","Name"],"sources":["/home/pramol/Desktop/IMDB/client/src/components/AddData.js"],"sourcesContent":["import React, { useState,useEffect } from 'react'\nimport Axios from 'axios'\nimport ActorData from './ActorData'\nimport ProducerData from './ProducerData'\nfunction AddData() {\n    const [movieName, setMovieName] = useState()\n    const [year, setYear] = useState()\n    const [plot, setPlot] = useState()\n    const [actorList, setActorList]= useState([])\n    const [producerList, setProducerList]= useState([])\n    const [actor, setActor]= useState()\n    const [producer, setProducer]= useState()\n    const[isShown, setIsShown]=useState('')\n    const[isShown2, setIsShown2]=useState(false)\n     useEffect(()=>{\n        Axios.get(\"http://localhost:3001/actor\").then((response)=>{\n            setActorList(response.data)\n        });\n        Axios.get(\"http://localhost:3001/producer\").then((response)=>{\n            setProducerList(response.data)\n        });\n     },[]);\n    const submitData = () => {\n\n        Axios.post(\"http://localhost:3001/movie\", {\n            movieName: movieName,\n            year: year,\n            plot: plot,\n            actor: actor,\n            producer: producer\n\n        }).then(\n            alert(\"Movie Added \")\n        );\n\n\n    }\n\n   return (\n    <div className='row'>\n    <div className='col-4 form m-5'>\n        <div className='form'>\n        <label htmlFor=\"mo_name\" className='form-label'>Movie Name</label>\n        <input type=\"text\" id=\"mo_name\" className='form-control' required onChange={(e) => \n        setMovieName(e.target.value)    }/>\n\n<label htmlFor=\"actList\" className=\"form-label\">Actor</label>\n        <input className=\"form-control\" list=\"actdata\" id=\"actList\"  onChange={(e) => \n        setActor(e.target.value)        }/>\n         <datalist id=\"actdata\">\n            {actorList.map((val)=>{\n             return <option value={val.Name}></option>\n            })}\n        </datalist>\n        <br/>\n        <button className='btn btn-warning' onClick={()=>{setIsShown(true)}}> New Actor </button>\n        <br/> \n        <br/>\n        <label htmlFor=\"exampleDataList\" className=\"form-label\">Producer</label>\n        <input className=\"form-control\" list=\"datalistOptions\" id=\"exampleDataList\" onChange={(e) => \n        setProducer(e.target.value)        } />\n         <datalist id=\"datalistOptions\">\n            {producerList.map((val)=>{\n             return <option value={val.Name}></option>\n            })}\n        </datalist>\n        <br/>\n        <button className='btn btn-warning' onClick={()=>{setIsShown2(true)}}> New Producer </button>\n        <br/> \n        <br/>\n        <label htmlFor=\"mo_date\" className='form-label'>Year of Release</label>\n        <input type=\"text\" id=\"mo_date\" className='form-control' required onChange={(e) => \n        setYear(e.target.value) \n        }/>\n        <label htmlFor=\"mo_plot\" className='form-label'>Plot</label>\n        <input type=\"text\" id=\"mo_plot\" className='form-control' required onChange={(e) => \n        setPlot(e.target.value) \n        }/>\n        \n        <button type=\"submit\" onClick={() => submitData() } className='btn btn-primary  mt-3'>Submit</button>\n        </div>\n    </div>\n    <div className='col-5 m-5'>\n        {isShown && <ActorData/>}\n        {isShown2 && <ProducerData/>}\n    </div>\n    </div>\n   );\n\n\n\n}\nexport default AddData"],"mappings":"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"},"metadata":{},"sourceType":"module"}